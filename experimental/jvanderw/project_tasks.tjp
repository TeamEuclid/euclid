# Copyright (c) 2011-2012 Jess VanDerwalker
#
# Task Juggler Project for Team Euclid

project euclid "X.org Project" "1.0" 2011-09-28 - 2012-04-10 {

    timezone "America/Los_Angeles"
    timeformat "%Y-%m-%d"
    # Only plan to be working 2.5 hours per day
    dailyworkinghours 2.5
    weekstartsmonday
    workinghours mon - fri 13:30 - 16:00
    workinghours sat, sun off
}

# Set up the vacations
vacation "Winter Break" 2011-12-10 - 2012-01-09
vacation "Veterans Day" 2011-11-11
vacation "Thanksgiving Day" 2011-11-23
vacation "Day after Thanksgiving" 2011-11-24
vacation "Martin Luther King Jr." 2012-01-16
flags team

# Macro for all team 
macro allocate_team [
    allocate bwooley
    allocate bhuddle
    allocate jvanderw
    allocate carrbs
    allocate askomra
    allocate dsnyder
]

# Macro for Arch and Design team members
macro allocate_a_and_d [
    allocate dsnyder
    allocate bwooley
]

# Marco to assign V&V developers
macro allocate_v_and_v [
    allocate bhuddle
]

# Macro to assign IT team members
macro allocate_it [
    allocate carrbs
]

# Define resources
resource devs "Developers" {
    resource bwooley "Braden Wooley" {
    }
    resource bhuddle "Ben Huddle" {
    }
    resource jvanderw "Jess VanDerwalker" {
    }
    resource carrbs "Ben Carr" {
    }
    resource askomra "Aaron Skroma" {
    }
    resource dsnyder "David Snyder" {
    }
    flags team
}


# Specify the work packages. These are the tasks for the team
task xorg_rsm "Rootless Window System" {

    task proj_plan "Project Plan" {
        # The start date for the plan
        start 2011-11-07
        # The number of days to 
        effort 60d
        # Allocate the whole team to the task
        ${allocate_team}
    }

    task research "Research" {
        note "Team wide research tasks."
        # Depends on completing the project plan
        depends !proj_plan
        
        task code_bases "Existing code bases" {

            task learn_xcb "Learn XCB basics" {
                effort 36h
                ${allocate_team}
            } 
            task lightpipe "Examine lightpipe code" {
                effort 24h
                ${allocate_team}
            }
        }

        task xcode "Learn XCode" {
            effort 12h
            ${allocate_team}
        }

        task osx_learn "Become familiar with OS X enviornment" {
            effort 12h
            ${allocate_team}
        }

        task obj_c "Basic Objective-C familiarity" {
            effort 24h
            ${allocate_team}
        }

        task dev_env_installed "Working Development Envionment" {
            effort 24h
            ${allocate_team}
            note "Get a working development environment working on OS X systems."
        }


        task learn_apple_api "Learn Apple windowing API" {
            effort 54h
            depends !dev_env_installed
            ${allocate_team}
        }
    }

    # Arch and Design tasks
    task arch_design "Archicture and Design" {
        depends !proj_plan
        ${allocate_a_and_d}

        # Research task associated with Architecture and Design
        task a_and_d_research "Research" {

            task interface "External Interface" {

                task xcb_lib_research "XCB library" {
                    effort 4h
                    ${allocate_a_and_d}
                }
                task xlib_lib_research "Xlib library" {
                    effort 4h
                    ${allocate_a_and_d}
                }
                task xtest_lib_research "XTest library" {
                    effort 4h
                    ${allocate_a_and_d}
                }
                task comp_lib_research "Composite library" {
                    effort 8h
                    ${allocate_a_and_d}
                }
                task damage_lib_research "Damage library" {
                    effort 8h
                    ${allocate_a_and_d}
                }
            } # end interface

            task examples_research "Code examples" {

                task lighpipe_a_and_r "Lightpipe" {
                    effort 8h
                    ${allocate_a_and_d}
                }
                task xcomp_manager "XComp Manager" {
                    effort 4h
                    ${allocate_a_and_d}
                }
                task misc_win_managers "i3 and awesome" {
                    effort 4h
                    ${allocate_a_and_d}
                }
            } # end examples_research
            
            task id_comps_research "Identify Components" {
                effort 6h
                ${allocate_a_and_d}
            }

        } # end of a_and_d_research

        task library_a_and_d "Module design" {
            
            task damage_interface "Interface with Damage" {
                effort 4h
                ${allocate_a_and_d}
            }
            task compositing "Interface with manual compositing" {
                effort 4h
                ${allocate_a_and_d}
            }
            task io_interface "Interface with I/O libraries" {
                effort 4h
                ${allocate_a_and_d}
            }

            task module_a_and_d "Module archictecture and design" {
                note "Archicture and design of module that are going to be specifically written by our team."

                task a_and_d_mile1 "Milestone 1" {
                    task mile1_identify "Identify modules" {
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile1_relations "Module relationships" {
                        note "Identify and manage indentify relationships between modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile1_api "API design" {
                        note "Design APIs for requires modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                } # end a_and_d_mile1

                task a_and_d_mile2 "Milestone 2" {
                    task mile2_identify "Identify modules" {
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile2_relations "Module relationships" {
                        note "Identify and manage indentify relationships between modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile2_api "API design" {
                        note "Design APIs for requires modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                } # end a_and_d_mile2

                task a_and_d_mile3 "Milestone 3" {
                    task mile3_identify "Identify modules" {
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile3_relations "Module relationships" {
                        note "Identify and manage indentify relationships between modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile3_api "API design" {
                        note "Design APIs for requires modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                } # end a_and_d_mile3

                task a_and_d_mile4 "Milestone 4" {
                    task mile4_identify "Identify modules" {
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile4_relations "Module relationships" {
                        note "Identify and manage indentify relationships between modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                    task mile4_api "API design" {
                        note "Design APIs for requires modules"
                        effort 4h
                        ${allocate_a_and_d}
                    }
                } # end a_and_d_mile4

            } # end module_a_and_d

        } # end library_a_and_d

        task app_a_and_d "Application" {

            task proc_arch "Process / control flow" {
                effort 2h
                ${allocate_a_and_d}
            }
            task osx_interface_a_and_d "Interface with OS X" {
                effort 3h
                ${allocate_a_and_d}
            }
            task app_interface "Interface with our API" {
                effort 2h
                ${allocate_a_and_d}
            }

        } # end app_a_and_d
    } # end of arch_design
}

# Project Milestones
task project_milestones "Milestones" {

    task init_project_plan "Initial Project Plan Complete" {
        milestone
        depends xorg_rsm.proj_plan
        end 2011-11-29
        note "Initial Project Plan submitted to Bart Massey for review"
    }

    task mile1 "Milestone 1" {
        milestone
        note "Rooted window"
        depends !!xorg_rsm.arch_design.library_a_and_d.module_a_and_d.a_and_d_mile1
    }

    task mile2 "Milestone 2" {
        milestone
        note "Rooted window with input"
        depends !!xorg_rsm.arch_design.library_a_and_d.module_a_and_d.a_and_d_mile2
    }

    task mile3 "Milestone 3" {
        milestone
        note "Rootless window"
        depends !!xorg_rsm.arch_design.library_a_and_d.module_a_and_d.a_and_d_mile3
    }

    task mile4 "Milestone 4" {
        milestone
        note "Rootless window with input"
        depends !!xorg_rsm.arch_design.library_a_and_d.module_a_and_d.a_and_d_mile4
    }
}

# A traditional Gantt chart with a project overview.
taskreport overview "euclid_project_overview" {
    formats html
    headline "Team Euclid Project Overview"
    columns bsi { title 'WBS' },
          name, start, end, effort,
          chart
    # For this report we like to have the abbreviated weekday in front
    # of the date. %a is the tag for this.
    timeformat "%a %Y-%m-%d"
#    loadunit days
    hideresource 1
    caption 'All effort values are in man days.'
}

taskreport development "euclid_dev" {
    formats html
    headline "Development and Resource Allocation"
    columns bsi {title 'WBS'}, name, start, end, effort, duration, chart {scale day width 1000}
    timeformat "%Y-%m-%d"
    hideresource ~(isleaf() & isleaf_())
    sortresources name.up
}